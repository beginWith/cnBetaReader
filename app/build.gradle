apply plugin: 'com.android.application'

project.archivesBaseName = "cnBeta"

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    final String buildDate = " Build " + new Date().format("yyyyMMddHHmmss")
    def verName = "1.0.8" + buildDate

    defaultConfig {
        applicationId "com.ywwxhz.cnbetareader"
        minSdkVersion 15
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionName verName
        resConfigs "zh-rCN"
        resConfigs "nodpi", "hdpi", "xhdpi", "xxhdpi", "xxxhdpi"
    }


    signingConfigs {
        release {
            storeFile file(System.getenv("KEY_STROE_FILE"))
            storePassword System.getenv("KEY_STROE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS_RELEASE")
            keyPassword System.getenv("KEY_PASSWORD")
        }
        debug {
            storeFile file(System.getenv("KEY_STROE_FILE"))
            storePassword System.getenv("KEY_STROE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS_DEBUG")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        releasePreview {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
            signingConfig signingConfigs.release
        }
    }

    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        def vercode = versionProps['VERSION_CODE'].toInteger()
        def runTasks = gradle.startParameter.taskNames
        if ('build' in runTasks) {
            vercode++
            versionProps['VERSION_CODE'] = vercode.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        }

        defaultConfig {
            versionCode vercode
        }

    }

    applicationVariants.all { variant ->
        def buildType = variant.buildType
        def encoding = java.nio.charset.Charset.defaultCharset().toString()
        if (buildType.applicationIdSuffix) {
            variant.mergeResources.doLast {
                def values = file("${buildDir}/intermediates/res/${variant.dirName}/values/values.xml")
                String content = values.getText(encoding)
                content = content.replaceAll("cnBeta Plus( Dev)?","cnBeta Plus Dev")
                values.write(content,encoding)
            }
        }
    }

    def runTasks = gradle.startParameter.taskNames
    if ('b' in runTasks || 'build' in runTasks) {
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = outputFile.name.replace(".apk"
                            , "-${defaultConfig.versionName}-${defaultConfig.versionCode}.apk".replaceAll(" ","-"))
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile project(':Crouton')
    compile files('libs/gson-2.2.4.jar')
    compile project(':FloatingActionButton')
    compile project(':materialish-progress')
    compile project(':PhotoView')
    compile project(':discreteSeekBar')
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.loopj.android:android-async-http:1.4.6'
    compile files('libs/jsoup-1.8.1.jar')
    compile files('libs/universal-image-loader-1.9.3-with-sources.jar')
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile project(':android-support-v4-preferencefragment')
    compile project(':SwipeBackLayout')
    compile project(':SuperSaiyanScrollView')
    compile project(':FilterMenu')
}
